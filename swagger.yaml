basePath: /
definitions:
  ai.StreamResponse:
    properties:
      choices:
        items:
          properties:
            finish_reason:
              type: string
            index:
              type: integer
            logprobs:
              type: string
            stop_reason:
              type: string
            text:
              type: string
          type: object
        type: array
      created:
        type: integer
      id:
        type: string
      model:
        type: string
      object:
        type: string
      usage:
        type: string
    type: object
  entities.AchievementType:
    properties:
      achievementTypeID:
        type: integer
      events:
        items:
          $ref: '#/definitions/entities.Event'
        type: array
      name:
        type: string
    type: object
  entities.Company:
    properties:
      company:
        type: string
      companyID:
        type: integer
      description:
        type: string
      events:
        items:
          $ref: '#/definitions/entities.Event'
        type: array
      logo:
        type: string
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
      title:
        type: string
    type: object
  entities.Event:
    properties:
      achievementType:
        $ref: '#/definitions/entities.AchievementType'
      achievementTypeID:
        type: integer
      coin:
        type: number
      company:
        $ref: '#/definitions/entities.Company'
      companyID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      endDs:
        type: string
      erpID:
        type: integer
      eventID:
        type: integer
      eventName:
        type: string
      eventType:
        type: string
      maxUsers:
        type: integer
      startDs:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  entities.Product:
    properties:
      availability:
        type: integer
      caseTypeID:
        type: integer
      companyID:
        type: integer
      description:
        type: string
      image:
        type: string
      name:
        type: string
      price:
        type: number
      productCategory:
        type: string
      productID:
        type: integer
    type: object
  entities.User:
    properties:
      avatar:
        type: string
      birthDate:
        type: string
      companyID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      email:
        type: string
      isOnline:
        type: boolean
      lastLogin:
        type: string
      lastSurname:
        type: string
      ldapID:
        type: string
      name:
        type: string
      phone:
        type: string
      role:
        type: string
      surname:
        type: string
      telegramID:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  entities.UserWallet:
    properties:
      price:
        type: number
      userID:
        type: integer
    type: object
  entities.UserWalletHistory:
    properties:
      coin:
        type: number
      description:
        type: string
      refillType:
        type: string
      userID:
        type: integer
    type: object
  entities.UserWinning:
    properties:
      delivered:
        type: boolean
      deliveredAt:
        type: string
      deliveredBy:
        type: integer
      productID:
        type: integer
      userID:
        type: integer
      userWinningID:
        type: integer
      winType:
        type: string
      wonAt:
        type: string
    type: object
  usecase.AdminVisitEventInput:
    properties:
      achievement_type_id:
        type: integer
      eventID:
        type: integer
      userID:
        type: integer
    type: object
  usecase.BuyProductInput:
    properties:
      productId:
        type: integer
      userID:
        type: integer
    type: object
  usecase.CaseOpenInput:
    properties:
      productId:
        type: integer
    type: object
  usecase.CaseOpenOutput:
    properties:
      productID:
        type: integer
    type: object
  usecase.ClosedEventsOutput:
    properties:
      events:
        items:
          $ref: '#/definitions/entities.Event'
        type: array
    type: object
  usecase.EventWithRegistration:
    properties:
      achievementType:
        $ref: '#/definitions/entities.AchievementType'
      achievementTypeID:
        type: integer
      coin:
        type: number
      company:
        $ref: '#/definitions/entities.Company'
      companyID:
        type: integer
      createdAt:
        type: string
      description:
        type: string
      endDs:
        type: string
      erpID:
        type: integer
      eventID:
        type: integer
      eventName:
        type: string
      eventType:
        type: string
      is_registered:
        type: boolean
      maxUsers:
        type: integer
      startDs:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  usecase.FindProductOutput:
    properties:
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
    type: object
  usecase.GetMyHistoryWalletOutput:
    properties:
      transactions:
        items:
          $ref: '#/definitions/entities.UserWalletHistory'
        type: array
    type: object
  usecase.LLMChatInput:
    properties:
      promnt:
        type: string
    type: object
  usecase.LoginOutput:
    properties:
      token:
        type: string
    type: object
  usecase.TopBalance:
    properties:
      user:
        $ref: '#/definitions/entities.User'
      wallet:
        $ref: '#/definitions/entities.UserWallet'
    type: object
  usecase.TopBalanceOutput:
    properties:
      wallets:
        items:
          $ref: '#/definitions/usecase.TopBalance'
        type: array
    type: object
  usecase.UpcomingEventList:
    properties:
      events:
        items:
          $ref: '#/definitions/usecase.EventWithRegistration'
        type: array
      total:
        type: integer
    type: object
  usecase.UserMeOutput:
    properties:
      birth_date:
        type: string
      buys:
        items:
          $ref: '#/definitions/usecase.UserWinnings'
        type: array
      coin:
        type: number
      email:
        type: string
      events:
        items:
          $ref: '#/definitions/entities.Event'
        type: array
      l_surname:
        type: string
      name:
        type: string
      phone:
        type: string
      surname:
        type: string
      user_id:
        type: integer
    type: object
  usecase.UserWinnings:
    properties:
      buy:
        $ref: '#/definitions/entities.UserWinning'
      product:
        $ref: '#/definitions/entities.Product'
    type: object
  usecase.VisitEventInput:
    properties:
      eventID:
        type: integer
    type: object
info:
  contact: {}
  title: B8boost API
  version: "1.0"
paths:
  /admin/events/visit:
    post:
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/usecase.AdminVisitEventInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: admin visit event
      tags:
      - event
  /events/archived:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.ClosedEventsOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get archived events
      tags:
      - event
  /events/upcoming:
    get:
      parameters:
      - description: period
        in: query
        name: period
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.UpcomingEventList'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get upcoming events
      tags:
      - event
  /events/visit:
    post:
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/usecase.VisitEventInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: visit event
      tags:
      - event
  /llm:
    post:
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/usecase.LLMChatInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ai.StreamResponse'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: chat with llm
      tags:
      - llm
  /login:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.LoginOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: login with telegram
      tags:
      - auth
  /products:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.FindProductOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get products
      tags:
      - product
  /products/buy:
    post:
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/usecase.BuyProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: buy product
      tags:
      - product
  /products/open/case:
    post:
      parameters:
      - description: input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/usecase.CaseOpenInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.CaseOpenOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: case open
      tags:
      - product
  /users/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.UserMeOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get user me
      tags:
      - user
  /users/top:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.TopBalanceOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get top balance
      tags:
      - user
  /users/transactions:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.GetMyHistoryWalletOutput'
        "500":
          description: Internal Server Error
      security:
      - BearerAuth: []
      summary: get my transaction
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
