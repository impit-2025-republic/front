/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const WalletIndexLazyImport = createFileRoute('/wallet/')()
const ProfileIndexLazyImport = createFileRoute('/profile/')()
const NotificationIndexLazyImport = createFileRoute('/notification/')()
const EventsIndexLazyImport = createFileRoute('/events/')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const WalletIndexLazyRoute = WalletIndexLazyImport.update({
  id: '/wallet/',
  path: '/wallet/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/wallet/index.lazy').then((d) => d.Route))

const ProfileIndexLazyRoute = ProfileIndexLazyImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile/index.lazy').then((d) => d.Route))

const NotificationIndexLazyRoute = NotificationIndexLazyImport.update({
  id: '/notification/',
  path: '/notification/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/notification/index.lazy').then((d) => d.Route),
)

const EventsIndexLazyRoute = EventsIndexLazyImport.update({
  id: '/events/',
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/': {
      id: '/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/notification/': {
      id: '/notification/'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof NotificationIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/wallet/': {
      id: '/wallet/'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof WalletIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/events': typeof EventsIndexLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/profile': typeof ProfileIndexLazyRoute
  '/wallet': typeof WalletIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/events': typeof EventsIndexLazyRoute
  '/notification': typeof NotificationIndexLazyRoute
  '/profile': typeof ProfileIndexLazyRoute
  '/wallet': typeof WalletIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/events/': typeof EventsIndexLazyRoute
  '/notification/': typeof NotificationIndexLazyRoute
  '/profile/': typeof ProfileIndexLazyRoute
  '/wallet/': typeof WalletIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/events' | '/notification' | '/profile' | '/wallet'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/events' | '/notification' | '/profile' | '/wallet'
  id:
    | '__root__'
    | '/'
    | '/events/'
    | '/notification/'
    | '/profile/'
    | '/wallet/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  EventsIndexLazyRoute: typeof EventsIndexLazyRoute
  NotificationIndexLazyRoute: typeof NotificationIndexLazyRoute
  ProfileIndexLazyRoute: typeof ProfileIndexLazyRoute
  WalletIndexLazyRoute: typeof WalletIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  EventsIndexLazyRoute: EventsIndexLazyRoute,
  NotificationIndexLazyRoute: NotificationIndexLazyRoute,
  ProfileIndexLazyRoute: ProfileIndexLazyRoute,
  WalletIndexLazyRoute: WalletIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/events/",
        "/notification/",
        "/profile/",
        "/wallet/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/events/": {
      "filePath": "events/index.lazy.tsx"
    },
    "/notification/": {
      "filePath": "notification/index.lazy.tsx"
    },
    "/profile/": {
      "filePath": "profile/index.lazy.tsx"
    },
    "/wallet/": {
      "filePath": "wallet/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
